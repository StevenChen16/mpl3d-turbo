name: Build and publish

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: read
  id-token: write # needed for trusted publishing

jobs:
  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64, aarch64]
    steps:
      - uses: actions/checkout@v4
      - uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist
          manylinux: auto
          container: off
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-${{ matrix.target }}
          path: dist

  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        target: [x64, x86]
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12', '3.13']
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.target }}
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          args: --release --out dist --interpreter ${{ format('python{0}.{1}', matrix.python-version[0], matrix.python-version[2]) }}
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-windows-${{ matrix.target }}-py${{ matrix.python-version }}
          path: dist

  macos:
    runs-on: macos-latest
    strategy:
      matrix:
        target: [x86_64, aarch64]
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12', '3.13']
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target == 'aarch64' && 'aarch64-apple-darwin' || '' }}
      - name: Build wheels - x86_64
        if: matrix.target == 'x86_64'
        uses: PyO3/maturin-action@v1
        with:
          args: --release --out dist --interpreter ${{ format('python{0}.{1}', matrix.python-version[0], matrix.python-version[2]) }}
      - name: Build wheels - universal2
        if: matrix.target == 'aarch64'
        uses: PyO3/maturin-action@v1
        with:
          args: --release --out dist --universal2 --interpreter ${{ format('python{0}.{1}', matrix.python-version[0], matrix.python-version[2]) }}
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-${{ matrix.target }}-py${{ matrix.python-version }}
          path: dist

  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [linux, windows, macos, sdist]
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: wheels-*
          path: dist
          merge-multiple: true
      - uses: actions/download-artifact@v4
        with:
          name: sdist
          path: dist
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          skip-existing: true
          # 仅当token存在时使用API token认证，否则使用OpenID Connect认证
          password: ${{ secrets.PYPI_API_TOKEN }}